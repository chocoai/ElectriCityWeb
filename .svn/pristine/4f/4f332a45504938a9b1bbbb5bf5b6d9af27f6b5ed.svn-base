package com.ikkong.dg.controller;

import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.dg.model.Business;
import com.ikkong.dg.service.BusinessService;
import com.ikkong.dg.service.impl.BusinessServiceImpl;
import com.ikkong.system.controller.base.UrlPermissController;
import com.jfinal.aop.Clear;

/**
 * Generated by Blade.
 * 2017-09-24 12:44:38
 */
public class BusinessController extends UrlPermissController {
	private static String CODE = "business";
	private static String PERFIX = "dg_business";
	private static String LIST_SOURCE = "Business.findByList";
	private static String BASE_PATH = "/dg/business/";
	
	BusinessService service = new BusinessServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "business.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "business_add.html");
	}

	public void edit() {
		String id = getPara(0);
		Business business = service.findById(id);
		setAttr("model", JsonKit.toJson(business));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "business_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Business business = service.findById(id);
		setAttr("model", JsonKit.toJson(business));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "business_view.html");
	}

	@Clear
	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}
	
//	@Clear
//	public void businessList(){
//		Object grid = paginate("Business.findByList");
//		renderJson(grid);
//	}

	public void save() {
		Business business = mapping(PERFIX, Business.class);
		boolean temp = service.save(business);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Business business = mapping(PERFIX, Business.class);
		business.setVersion(business.getVersion()+1);
		boolean temp = service.update(business);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
