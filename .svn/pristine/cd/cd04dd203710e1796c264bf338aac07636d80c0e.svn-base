package com.ikkong.dg.service.impl;

import java.util.Date;

import com.ikkong.common.constant.CommonConts.MsgStatus;
import com.ikkong.common.constant.CommonConts.MsgType;
import com.ikkong.core.base.service.impl.BaseService;
import com.ikkong.core.toolbox.Record;
import com.ikkong.dg.model.DgMsgTemplate;
import com.ikkong.dg.model.Messages;
import com.ikkong.dg.service.DgMsgTemplateService;
import com.ikkong.dg.service.MessagesService;

/**
 * Generated by Blade.
 * 2017-09-24 12:44:38
 */
public class MessagesServiceImpl extends BaseService<Messages> implements MessagesService{
	
	DgMsgTemplateService msgTempServ = new DgMsgTemplateServiceImpl();

	@Override
	public boolean addMessage(Long dgUserId, String content, Integer type) {
		Messages msg = new Messages();
		msg.setDg_id(dgUserId);
		msg.setContent(content);
		msg.setType(type);
		msg.setCreate_time(new Date());
		if (type != MsgType.SYS_MSG.getStatusVal() && type != MsgType.NOTICE_MSG.getStatusVal()) {
			msg.setStatus(MsgStatus.UNREAD.getStatusVal());
		}
		msg.setVersion(1);
		return this.save(msg) ? true : false;
	}

	@Override
	public void addMsgByTemplate(Long userId, Integer type, String tempCode) {
		Messages msg = new Messages();
		msg.setDg_id(userId);
		msg.setTempid(getTmpIdByCode(tempCode));
		msg.setType(type);
		msg.setCreate_time(new Date());
		if (type != MsgType.SYS_MSG.getStatusVal() && type != MsgType.NOTICE_MSG.getStatusVal()) {
			msg.setStatus(MsgStatus.UNREAD.getStatusVal());
		}
		msg.setVersion(1);
		this.save(msg);
	}

	private Integer getTmpIdByCode(String tmpCode) {
		DgMsgTemplate vo = msgTempServ.findFirstBy(" where code = #{code}", Record.create().set("code", tmpCode));
		return vo != null  ? vo.getId() : null;
	}

	@Override
	public void addSysMsgByTemp(Long userId, String tempCode) {
		addMsgByTemplate(userId, MsgType.SYS_MSG.getStatusVal(), tempCode);
	}
}
