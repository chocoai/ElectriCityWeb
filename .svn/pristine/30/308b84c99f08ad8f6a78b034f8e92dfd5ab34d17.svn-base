package com.ikkong.dg.controller;

import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.dg.model.ItemsReject;
import com.ikkong.dg.service.ItemsRejectService;
import com.ikkong.dg.service.impl.ItemsRejectServiceImpl;
import com.ikkong.system.controller.base.UrlPermissController;

/**
 * Generated by Blade.
 * 2017-11-14 18:03:41
 */
public class ItemsRejectController extends UrlPermissController {
	private static String CODE = "itemsReject";
	private static String PERFIX = "dg_items_reject";
	private static String LIST_SOURCE = "ItemsReject.list";
	private static String BASE_PATH = "/dg/itemsReject/";
	
	ItemsRejectService service = new ItemsRejectServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "itemsReject.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "itemsReject_add.html");
	}

	public void edit() {
		String id = getPara(0);
		ItemsReject itemsReject = service.findById(id);
		setAttr("model", JsonKit.toJson(itemsReject));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "itemsReject_edit.html");
	}

	public void view() {
		String id = getPara(0);
		ItemsReject itemsReject = service.findById(id);
		setAttr("model", JsonKit.toJson(itemsReject));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "itemsReject_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		ItemsReject itemsReject = mapping(PERFIX, ItemsReject.class);
		boolean temp = service.save(itemsReject);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		ItemsReject itemsReject = mapping(PERFIX, ItemsReject.class);
		itemsReject.setVersion(itemsReject.getVersion()+1);
		boolean temp = service.update(itemsReject);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
