package com.ikkong.dg.controller;

import com.ikkong.core.dao.Blade;
import com.ikkong.core.dao.Db;
import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.core.toolbox.Record;
import com.ikkong.dg.model.DgOrder;
import com.ikkong.dg.service.DgOrderService;
import com.ikkong.dg.service.impl.DgOrderServiceImpl;
import com.ikkong.system.controller.base.UrlPermissController;

/**
 * Generated by Blade.
 * 2017-10-01 21:21:43
 */
public class DgOrderController extends UrlPermissController {
	private static String CODE = "dgOrder";
	private static String PERFIX = "dg_order";
	private static String LIST_SOURCE = "DgOrder.findByBackgroud";
	private static String BASE_PATH = "/dg/dgOrder/";
	
	DgOrderService service = new DgOrderServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		setAttr("workOrderCode", "workOrder");
		setAttr("orderId", "");
		render(BASE_PATH + "dgOrder.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "dgOrder_add.html");
	}

	public void edit() {
		String id = getPara(0);
		DgOrder dgOrder = service.findById(id);
		dgOrder.setVersion(dgOrder.getVersion()+1);
		setAttr("model", JsonKit.toJson(dgOrder));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "dgOrder_edit.html");
	}

	public void view() {
		String id = getPara(0);
		String sql = Blade.dao().getScript("DgOrder.getById").getSql();
		Record dgOrder = Db.init().queryMap(sql+" where a.id = #{orderId}", Record.create().set("orderId", id));
		setAttr("model", JsonKit.toJson(dgOrder));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "dgOrder_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		DgOrder dgOrder = mapping(PERFIX, DgOrder.class);
		boolean temp = service.save(dgOrder);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		DgOrder dgOrder = mapping(PERFIX, DgOrder.class);
		dgOrder.setVersion(dgOrder.getVersion()+1);
		boolean temp = service.update(dgOrder);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
