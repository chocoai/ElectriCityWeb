package com.ikkong.dg.controller;

import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.dg.model.DgMsgTemplate;
import com.ikkong.dg.service.DgMsgTemplateService;
import com.ikkong.dg.service.impl.DgMsgTemplateServiceImpl;
import com.ikkong.system.controller.base.UrlPermissController;

/**
 * Generated by Blade.
 * 2017-11-30 17:38:21
 */
public class MsgTemplateController extends UrlPermissController {
	private static String CODE = "msgTemplate";
	private static String PERFIX = "dg_msg_template";
	private static String LIST_SOURCE = "DgMsgTemplate.list";
	private static String BASE_PATH = "/dg/dgMsgTemplate/";
	
	DgMsgTemplateService service = new DgMsgTemplateServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "dgMsgTemplate.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "dgMsgTemplate_add.html");
	}

	public void edit() {
		String id = getPara(0);
		DgMsgTemplate dgMsgTemplate = service.findById(id);
		setAttr("model", JsonKit.toJson(dgMsgTemplate));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "dgMsgTemplate_edit.html");
	}

	public void view() {
		String id = getPara(0);
		DgMsgTemplate dgMsgTemplate = service.findById(id);
		setAttr("model", JsonKit.toJson(dgMsgTemplate));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "dgMsgTemplate_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		DgMsgTemplate dgMsgTemplate = mapping(PERFIX, DgMsgTemplate.class);
		boolean temp = service.save(dgMsgTemplate);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		DgMsgTemplate dgMsgTemplate = mapping(PERFIX, DgMsgTemplate.class);
		dgMsgTemplate.setVersion(dgMsgTemplate.getVersion()+1);
		boolean temp = service.update(dgMsgTemplate);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
